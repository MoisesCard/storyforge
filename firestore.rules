rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /projects/{projectId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid);
      
      allow write: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    match /characters/{characterId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.userId == request.auth.uid
      );
      
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    match /userProfiles/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    match /relationships/{projectId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/projects/$(projectId)).data.userId == request.auth.uid;
    }
    
    match /locations/{locationId} {
      allow read, write: if request.auth != null;
    }
    
    match /timelineEvents/{eventId} {
      allow read, write: if request.auth != null;
    }
  }
} 